{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFechGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAST,EACTU,SAlBkB,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,QCNlBK,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OADAN,QAAQC,IAAI,CAACG,KAAGC,QAAMC,QAElB,sBAAKC,UAAY,oCAAjB,UACI,qBAAKC,IAAMF,EAAKG,IAAKJ,IACrB,4BAAIA,Q,uBCPHK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UAAUF,GAD5C,+DAEDG,MAAMR,GAFL,cAEdS,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIC,cAAL,aAAC,EAAYC,iBAAiBhB,QARrB,kBAWbY,GAXa,4CAAH,sDCGRK,EAAW,SAAC,GAAgB,IAAD,ECAZ,SAACZ,GAAY,IAAD,EAEVvB,mBACtB,CAAC6B,KAAK,GACNO,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAkBpC,OAXAC,qBAAU,WACNjB,EAASC,GACRiB,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAGtB,CAACb,IAGIc,EDhBwBK,CAFK,EAAdnB,UAEVU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAKpB,OACI,qCACA,oBAAIjB,UAAY,oCAAhB,sBACCiB,GAAW,mBAAGjB,UAAU,iCAAb,qBACV,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIhB,aEfpB2B,EAAgB,WAAK,IAAD,EAEO3C,mBAAU,CAAC,gBAFlB,mBAEtB4C,EAFsB,KAEV7C,EAFU,KAU7B,OACI,gCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAA2BA,SAAYA,GAAtBA,Y,MChBzCsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.69b7797e.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value = {inputValue}\r\n            onChange= {handleInputChange}\r\n            />\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n//rafc \r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url})\r\n    return (\r\n        <div className = \"animate__animated animate__bounce\">\r\n            <img src= {url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifts = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9et30Mijp3YMJYi9qViLcuD0rzjC7SOy`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFechGifts } from '../hooks/useFetchGifts';\r\nexport const GiftGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFechGifts(category);//cada vez que el componente cambie se ejecuta esto \r\n\r\n    //const [count, setCount] = useState(0);\r\n    //  const [images, setImages] = useState([]);\r\n\r\n    return (\r\n        <>\r\n        <h3 className = \"animate__animated animate__bounce\">category</h3>\r\n        {loading && <p className=\"animate_animated animate_flash\">Loading</p>}\r\n        { <div className=\"card-grid\">\r\n              {\r\n                  images.map(img=>(\r\n                      <GifGridItem \r\n                      key = {img.id}\r\n                        {...img}></GifGridItem>\r\n                  ))\r\n              }\r\n        </div>} \r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFechGifts = (category)=>{\r\n    \r\n    const [state, setState] = useState(\r\n        {data:[],\r\n        loading:true}\r\n        );\r\n\r\n    useEffect(()=>{\r\n        getGifts(category)\r\n        .then(imgs=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n        })\r\n    },[category])\r\n\r\n\r\n    return state;//{data[],loading:true}\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\nexport const GiftExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState( [\"Shaman King\"]);\r\n\r\n    // const handleAdd= ()=>{\r\n    //     setCategories([...categories,'Naruto']);\r\n    //     setCategories(['SAO',...categories]);\r\n\r\n    //     console.log(categories)\r\n    // }\r\n    return(\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                        <GiftGrid key = {category} category = {category}></GiftGrid>\r\n                    )}\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}